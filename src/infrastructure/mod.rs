pub mod auth;
pub mod cache_service;
pub mod config;
pub mod connection_pool_monitor;
pub mod deadlock_detector;
pub mod event_store;
pub mod init;
pub mod kafka_abstraction;
pub mod kafka_dlq;
pub mod kafka_event_processor;
pub mod kafka_metrics;
pub mod kafka_monitoring;
pub mod kafka_recovery;
pub mod kafka_recovery_strategies;
pub mod kafka_tracing;
pub mod l1_cache_updater;
pub mod logging;
pub mod middleware;
pub mod projections;
pub mod rate_limiter;
pub mod redis_abstraction;
pub mod repository;
pub mod scaling;
pub mod sharding;
pub mod stuck_operation_diagnostic;
pub mod timeout_manager;
pub mod troubleshooting;
pub mod user_repository;
pub mod outbox; // Added

pub use auth::*;
pub use cache_service::*;
pub use config::*;
pub use event_store::{EventStore, EventStoreConfig};
pub use kafka_abstraction::KafkaConfig;
pub use kafka_dlq::*;
pub use kafka_event_processor::KafkaEventProcessor;
pub use kafka_metrics::*;
pub use kafka_monitoring::*;
pub use kafka_recovery::*;
pub use kafka_recovery_strategies::*;
pub use kafka_tracing::*;
pub use middleware::*;
pub use projections::ProjectionStore;
pub use projections::*;
pub use rate_limiter::*;
pub use redis_abstraction::*;
pub use redis_abstraction::{RealRedisClient, RedisClientTrait};
pub use repository::*;
pub use repository::{AccountRepository, AccountRepositoryTrait, RepositoryError};
pub use scaling::*;
pub use sharding::*;
pub use user_repository::*;
pub use user_repository::{NewUser, User, UserRepository, UserRepositoryError}; // Added re-export
pub use outbox::{OutboxMessage, PersistedOutboxMessage, OutboxRepositoryTrait, PostgresOutboxRepository}; // Added PostgresOutboxRepository
